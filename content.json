{"meta":{"title":"Wonny's note","subtitle":null,"description":null,"author":"Wonny","url":"https://jumpegg.github.io"},"pages":[],"posts":[{"title":"ionic nav","slug":"ionic-nav","date":"2017-07-07T14:37:10.000Z","updated":"2017-07-07T15:04:58.330Z","comments":true,"path":"2017/07/07/ionic-nav/","link":"","permalink":"https://jumpegg.github.io/2017/07/07/ionic-nav/","excerpt":"","text":"IONIC 간단한 nav 개념 잡기기본적인 페이지 이동ionic 은 router 의 개념이 stack을 통해 view 를 push/pop 하는 형식이다.(이것은 한글인가 영어인가….) 1234567891011import &#123;NavController&#125; from 'ionic-angular';.....@Component(&#123; templateUrl: 'yourIndex.html';&#125;)export class IndexPage&#123; constructor( public navCtrl:NavController)&#123; &#125;&#125; 여기서 클래스 이름 그대로 NavController 가 네비게이션 컨트롤러 역할을 한다. 페이지를 넘기고 싶다면 push 를 이용해서 이동하고 싶은 페이지의 컴포넌트를 입력시키면 된다. 1234567891011121314151617import &#123;NavController&#125; from 'ionic-angular';.....import &#123;SecondPage&#125; from '../Component/SecondPage/SecondPage';@Component(&#123; templateUrl: 'yourIndex.html';&#125;)export class IndexPage&#123; constructor( public navCtrl:NavController)&#123; &#125; moveToSecond()&#123; this.navCtrl.push(SecondPage); //push 를 이용한 페이지 이동 &#125;&#125; 페이지간 데이터 전송페이지간 데이터를 전송하고 싶다면 push에 파라메터로 넘기고싶은 데이터의 Object를 파라메터로 넘겨주고, 받는 페이지에서는 navParams.get() 을 이용해서 받으면 된다. 파라메터를 넘기는 IndexPage 1234567891011121314151617import &#123;NavController&#125; from 'ionic-angular';.....import &#123;SecondPage&#125; from '../Component/SecondPage/SecondPage';@Component(&#123; templateUrl: 'yourIndex.html';&#125;)export class IndexPage&#123; constructor( public navCtrl:NavController)&#123; &#125; moveToSecond()&#123; this.navCtrl.push(SecondPage,&#123;msg: \"It's work!!\"&#125;); // 컴포넌트에 msg 라는 파라메터 넘김 &#125;&#125; 파라메터를 받는 SecondPage 12345678910111213141516import &#123;NavController, NavParams&#125; from 'ionic-angular';....@Component(&#123; templateUrl: 'yourSecond.html';&#125;)export class SecondPage&#123; constructor( public navCtrl:NavController, public navParams:NavParams)&#123; &#125; ionViewDidLoad() &#123; console.log(this.navParams.get('msg')); // 파라메터에 접근 &#125;&#125; rootPage 설정페이지가 이동을 하면 새로 root 페이지를 설정해줘야 할 때가 있다. 예를들면 로그인 이후 화면? 같은게 예로 들 수 있다. setRoot()를 이용하면 root 페이지를 바꿀 수 있다. 1234567891011121314151617import &#123;NavController, NavParams&#125; from 'ionic-angular';....@Component(&#123; templateUrl: 'yourSecond.html';&#125;)export class SecondPage&#123; constructor( public navCtrl:NavController, public navParams:NavParams)&#123; &#125; ionViewDidLoad() &#123; console.log(this.navParams.get('msg')); // 파라메터에 접근 this.navCtrl.setRoot(SecondPage); // SecondPage로 root를 바꾼다 &#125;&#125; 참조 사이트http://www.joshmorony.com/a-simple-guide-to-navigation-in-ionic-2/고 투 더 멘토","categories":[{"name":"Ionic","slug":"Ionic","permalink":"https://jumpegg.github.io/categories/Ionic/"}],"tags":[{"name":"ionic, nav","slug":"ionic-nav","permalink":"https://jumpegg.github.io/tags/ionic-nav/"}]},{"title":"Hexo 를 시작해보자","slug":"start","date":"2017-07-06T09:15:19.000Z","updated":"2017-07-06T09:31:29.888Z","comments":true,"path":"2017/07/06/start/","link":"","permalink":"https://jumpegg.github.io/2017/07/06/start/","excerpt":"","text":"hexo 가 있는건 진작 알고 있었는데, 혼자 하는 프로젝트가 어느정도 끝나가면서 사용했던 개념들을 기록 할 공간이 필요했다. 그래서 이번에 기록 할 겸 hexo도 사용해볼겸 해서 블로그를 시작하게 되었다. 우선 hexo 를 시작해보자 Hexo 를 시작해보자hexo 설치1$ npm install -g hexo-cli cli 환경이 익숙치 않은 사람들에게는 낯설겠지만 hexo 는 cli 환경에서 페이지를 생성하고 markdown 문법을 사용해서 내용을 구성한다. 아무튼, 명령어를 치면 이제 hexo 명령어 들을 사용할 수 있다. hexo init1$ hexo init [폴더명] init 명령어를 사용하면 해당 폴더에 hexo를 사용하기 위한 기본 구조와 파일들이 생성된다 이제 생성한 폴더에 들어가서 hexo 명령어들을 이용해서 작업하면 된다. hexo new1$ hexo new [포스트명] 폴더 안으로 들어가서 new 명령어를 실행하면 [포스트명] 으로 source/_posts/ 폴더안에 파일이 생성된다. 이 파일들이 우리가 만드는 컨텐츠가 된다.","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://jumpegg.github.io/categories/Hexo/"}],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2017-07-06T08:45:13.775Z","updated":"2017-07-06T08:45:13.775Z","comments":true,"path":"2017/07/06/hello-world/","link":"","permalink":"https://jumpegg.github.io/2017/07/06/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}